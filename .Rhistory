library(ggplot2)
library(dplyr)
library(psych)
library(corrplot)
library(plotly)
library(caret)
library(magrittr)
library(Metrics)
red_sol <- c(3,7,11,15,18,27,29,30,30,31,31,32,33,33,34,36,
36,36,37,38,39,39,39,40,41,42,42,43,44,45,46,
47,50)
red_dem_ox <- c(5,11,21,16,16,28,27,25,35,30,40,32,34,32,34,
37,38,34,36,38,37,36,45,39,41,40,44,37,44,
46,46,49,51)
df <- data.frame(red_sol, red_dem_ox)
head(df)
summary(df)
plot(df$red_sol, df$red_dem_ox)
boxplot(df)
cor(df, method = 'pearson')
correlacion <- cor(df)
corrplot(correlacion, method = "number")
index <- createDataPartition(df$red_dem_ox, times = 1, p=0.8, list = FALSE)
train.data <- df[index, ]
test.data <- df[-index, ]
head(train.data)
linear_model <- lm(red_dem_ox~red_sol, data = train.data)
summary(linear_model)
predicted <- predict(linear_model, newdata = test.data)
predicted
rmse(test.data$red_sol, predicted)
predicted_53 <- predict(linear_model, newdata = data.frame(red_sol=53))
predicted_53
predict_user <- function(x) {
predicted_user <- predict(linear_model, newdata = data.frame(red_sol=x))
return(predicted_user)
}
x <- readline(prompt = "Enter the number to predict: ")
x <- as.integer(x)
predicted_value <- predict_user(x)
print(predicted_value)
ggplot(test.data, aes(x = predicted, y = red_dem_ox)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x='Predicted values', y='Actual values', title='Reduccion en solidos VS Reduccion en demanda de oxigeno en solidos')
